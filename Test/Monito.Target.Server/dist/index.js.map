{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAmCA,aAnCA,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,MAkCA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhCA,MAAM,GAAY,EAAlB,EAAA,WAEA,WAAW,KACV,QAAQ,IAAI,yBACN,MAAA,GAAc,EAAkB,EAAA,mBAAA,oBAChC,EAAS,IACd,yBAA2B,KAAK,SAAS,SAAS,IAAI,UAAU,EAAG,IAAM,KAAK,SAAS,SAAS,IAAI,UAAU,EAAG,IAAM,KAAK,SAAS,SAAS,IAAI,UAAU,EAAG,IAC3J,IAAA,IAAI,EAAI,EAAG,EAAI,IAAM,IACzB,EAAY,MAAM,IAAW,KAAM,QACpC,EAAY,GAAG,SAAU,KACxB,QAAQ,IAAI,YAId,EAAU,IAAI,IAAK,CAAC,EAAK,KAMlB,MAAA,EAAc,CACnB,IACA,IAAK,IACL,IAAK,KACN,QAAQ,IAAI,EAAI,SAChB,WAAW,KACV,EAAI,WAAW,EAAY,KAAK,MAAM,KAAK,SAAW,EAAY,WAChE,OAGJ,MAAM,EAAO,KACb,QAAQ,IAAI,iCACZ,EAAU,OAFG","file":"index.js","sourceRoot":"..","sourcesContent":["import Express from 'express';\nimport { createWriteStream } from 'fs';\n\nconst WebServer = Express();\n\nsetTimeout(() => {\n\tconsole.log('Creating test links..')\n\tconst writeStream = createWriteStream('./test-links.txt');\n\tconst genUrl = () => \n\t\t'http://localhost:8009/' + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n\tfor (let i = 0; i < 5000; i++)\n\t\twriteStream.write(genUrl() + '\\n', 'utf8');\n\twriteStream.on('finish', () => {\n\t\tconsole.log('Done');\n\t})\n});\n\nWebServer.all(\"*\", (req, res) => {\n\t// const statusCodes = [\n\t// \t200, 201, 202, 203, 204, 205, 206, 207, 208,\n\t// \t300, 301, 302, 303, 304, 305, 306, 308, 307,\n\t// \t400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 426, 429, 449, 451,\n\t// \t500, 501, 502, 503, 504, 505, 509];\n\tconst statusCodes = [\n\t\t200,\n\t\t403, 404,\n\t\t500, 502];\n\tconsole.log(req.headers)\n\tsetTimeout(() => {\n\t\tres.sendStatus(statusCodes[Math.floor(Math.random() * statusCodes.length)]);\n\t}, 1000);\n})\n\nconst port = 8009;\nconsole.log(`Server listening on port ${port}`);\nWebServer.listen(port);"]}